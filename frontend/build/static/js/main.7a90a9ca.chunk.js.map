{"version":3,"sources":["constants/productConstants.js","store.js","reducers/productReducers.js","reducers/userReducers.js","constants/userConstants.js","actions/userActions.js","components/Header.js","screens/HomeScreen.js","components/EnquireButton.js","components/Product.js","components/Message.js","components/Loader.js","actions/productActions.js","screens/PlanScreen.js","screens/AboutScreen.js","components/ContactButton.js","screens/ContactScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","App.js","serviceWorker.js","index.js","assets/family.png","assets/logo.png","assets/park.jpeg","assets/browse.png","assets/select.png","assets/agent.jpeg","assets/plans.png","assets/about.png","assets/contact.png"],"names":["reducer","combineReducers","productList","state","arguments","length","undefined","products","action","type","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cart","cartItems","shippingAddress","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","logout","dispatch","removeItem","document","location","href","Header","useDispatch","useSelector","React","createElement","Navbar","className","collapseOnSelect","Container","LinkContainer","to","Brand","alt","src","logo","width","height","Toggle","aria-controls","Collapse","id","Nav","Link","NavDropdown","title","name","Item","onClick","logoutHandler","isAdmin","HomeScreen","Button","park","Row","Col","xs","md","Image","browse","roundedCircle","select","agent","EnquireButton","show","setShow","useState","handleClose","variant","size","handleShow","Modal","onHide","backdrop","keyboard","closeButton","Title","Body","Footer","Product","_ref","Card","as","Text","price","cover","term","description","Message","children","Alert","defaultProps","Loader","Spinner","animation","role","style","margin","display","listProducts","keyword","pageNumber","async","data","axios","get","response","message","PlanScreen","match","params","useEffect","plans","Fragment","map","key","_id","AboutScreen","about","ContactButton","ContactScreen","Form","Group","controlId","Control","placeholder","contact","FormContainer","LoginScreen","history","email","setEmail","password","setPassword","redirect","search","split","push","family","onSubmit","e","preventDefault","login","config","headers","post","setItem","stringify","Label","value","onChange","target","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProductListScreen","loadingDelete","errorDelete","successDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteHandler","window","confirm","getState","Authorization","token","delete","deleteProduct","createProductHandler","Table","striped","bordered","hover","responsive","ProductEditScreen","productId","setPrice","image","setImage","setCover","setTerm","setDescription","loadingUpdate","errorUpdate","successUpdate","put","updateProduct","App","Router","Route","path","component","exact","Boolean","hostname","ReactDOM","render","Provider","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.7a90a9ca.chunk.js","sourcesContent":["//some constants for our product data\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST'\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS'\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL'\n\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST'\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS'\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL'\n\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST'\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS'\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL'\n\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST'\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS'\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL'\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET'\n\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST'\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS'\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL'\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET'\n\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST'\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS'\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL'\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET'\n\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST'\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS'\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL'","// Standard way to setup a Redux store.\nimport {\n  createStore,\n  combineReducers,\n  applyMiddleware\n} from 'redux'\nimport thunk from 'redux-thunk'\nimport {\n  composeWithDevTools\n} from 'redux-devtools-extension'\nimport {\n  productListReducer,\n  productDetailsReducer,\n  productDeleteReducer,\n  productCreateReducer,\n  productUpdateReducer,\n  productReviewCreateReducer,\n  productTopRatedReducer,\n} from './reducers/productReducers'\nimport {\n  userLoginReducer,\n  userRegisterReducer,\n  userDetailsReducer,\n  userUpdateProfileReducer,\n  userListReducer,\n  userDeleteReducer,\n  userUpdateReducer,\n} from './reducers/userReducers'\n\n\nconst reducer = combineReducers({\n  productList: productListReducer,\n  productDetails: productDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n  JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n  JSON.parse(localStorage.getItem('userInfo')) :\n  null\n\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ?\n  JSON.parse(localStorage.getItem('shippingAddress')) : {}\n\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage,\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  },\n}\n\nconst middleware = [thunk]\n\nconst store = createStore(\n  reducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n)\n\nexport default store","//importing the neccassary constants\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_RESET,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_UPDATE_RESET,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_CREATE_REVIEW_RESET,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\n\n//these are the redux reducers which handles the state for our products\n\nexport const productListReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_LIST_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_LIST_SUCCESS:\n      return {\n        loading: false,\n        products: action.payload.products,\n        pages: action.payload.pages,\n        page: action.payload.page,\n      }\n    case PRODUCT_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDetailsReducer = (\n  state = { product: { reviews: [] } },\n  action\n) => {\n  switch (action.type) {\n    case PRODUCT_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case PRODUCT_DETAILS_SUCCESS:\n      return { loading: false, product: action.payload }\n    case PRODUCT_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_DELETE_REQUEST:\n      return { loading: true }\n    case PRODUCT_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const productCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_CREATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productUpdateReducer = (state = { product: {} }, action) => {\n  switch (action.type) {\n    case PRODUCT_UPDATE_REQUEST:\n      return { loading: true }\n    case PRODUCT_UPDATE_SUCCESS:\n      return { loading: false, success: true, product: action.payload }\n    case PRODUCT_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_UPDATE_RESET:\n      return { product: {} }\n    default:\n      return state\n  }\n}\n\nexport const productReviewCreateReducer = (state = {}, action) => {\n  switch (action.type) {\n    case PRODUCT_CREATE_REVIEW_REQUEST:\n      return { loading: true }\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\n      return { loading: false, success: true }\n    case PRODUCT_CREATE_REVIEW_FAIL:\n      return { loading: false, error: action.payload }\n    case PRODUCT_CREATE_REVIEW_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\n  switch (action.type) {\n    case PRODUCT_TOP_REQUEST:\n      return { loading: true, products: [] }\n    case PRODUCT_TOP_SUCCESS:\n      return { loading: false, products: action.payload }\n    case PRODUCT_TOP_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n","//importing all the neccassary constants\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_RESET,\n  USER_DETAILS_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_SUCCESS,\n  USER_LIST_FAIL,\n  USER_LIST_RESET,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_RESET,\n  USER_UPDATE_REQUEST,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_PROFILE_RESET,\n} from '../constants/userConstants'\n\n//these are the redux reducers for all our our users\n\nexport const userLoginReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_LOGIN_REQUEST:\n      return { loading: true }\n    case USER_LOGIN_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_LOGIN_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userRegisterReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_REGISTER_REQUEST:\n      return { loading: true }\n    case USER_REGISTER_SUCCESS:\n      return { loading: false, userInfo: action.payload }\n    case USER_REGISTER_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LOGOUT:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userDetailsReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_DETAILS_REQUEST:\n      return { ...state, loading: true }\n    case USER_DETAILS_SUCCESS:\n      return { loading: false, user: action.payload }\n    case USER_DETAILS_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_DETAILS_RESET:\n      return { user: {} }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateProfileReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_UPDATE_PROFILE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_PROFILE_SUCCESS:\n      return { loading: false, success: true, userInfo: action.payload }\n    case USER_UPDATE_PROFILE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_PROFILE_RESET:\n      return {}\n    default:\n      return state\n  }\n}\n\nexport const userListReducer = (state = { users: [] }, action) => {\n  switch (action.type) {\n    case USER_LIST_REQUEST:\n      return { loading: true }\n    case USER_LIST_SUCCESS:\n      return { loading: false, users: action.payload }\n    case USER_LIST_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_LIST_RESET:\n      return { users: [] }\n    default:\n      return state\n  }\n}\n\nexport const userDeleteReducer = (state = {}, action) => {\n  switch (action.type) {\n    case USER_DELETE_REQUEST:\n      return { loading: true }\n    case USER_DELETE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_DELETE_FAIL:\n      return { loading: false, error: action.payload }\n    default:\n      return state\n  }\n}\n\nexport const userUpdateReducer = (state = { user: {} }, action) => {\n  switch (action.type) {\n    case USER_UPDATE_REQUEST:\n      return { loading: true }\n    case USER_UPDATE_SUCCESS:\n      return { loading: false, success: true }\n    case USER_UPDATE_FAIL:\n      return { loading: false, error: action.payload }\n    case USER_UPDATE_RESET:\n      return {\n        user: {},\n      }\n    default:\n      return state\n  }\n}\n","//some constants for our user data\n\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST'\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS'\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL'\nexport const USER_LOGOUT = 'USER_LOGOUT'\n\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST'\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS'\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL'\n\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST'\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS'\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL'\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET'\n\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST'\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS'\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL'\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET'\n\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST'\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS'\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL'\nexport const USER_LIST_RESET = 'USER_LIST_RESET'\n\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST'\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS'\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL'\n\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST'\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS'\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL'\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET'","import axios from 'axios'\n//importing the neccessary constants\nimport {\n  USER_DETAILS_FAIL,\n  USER_DETAILS_REQUEST,\n  USER_DETAILS_SUCCESS,\n  USER_LOGIN_FAIL,\n  USER_LOGIN_REQUEST,\n  USER_LOGIN_SUCCESS,\n  USER_LOGOUT,\n  USER_REGISTER_FAIL,\n  USER_REGISTER_REQUEST,\n  USER_REGISTER_SUCCESS,\n  USER_UPDATE_PROFILE_FAIL,\n  USER_UPDATE_PROFILE_REQUEST,\n  USER_UPDATE_PROFILE_SUCCESS,\n  USER_DETAILS_RESET,\n  USER_LIST_FAIL,\n  USER_LIST_SUCCESS,\n  USER_LIST_REQUEST,\n  USER_LIST_RESET,\n  USER_DELETE_REQUEST,\n  USER_DELETE_SUCCESS,\n  USER_DELETE_FAIL,\n  USER_UPDATE_FAIL,\n  USER_UPDATE_SUCCESS,\n  USER_UPDATE_REQUEST,\n} from '../constants/userConstants'\n\n//these are the redux actions for our user data\n\nexport const login = (email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const {\n      data\n    } = await axios.post(\n      '/api/users/login', {\n      email,\n      password\n    },\n      config\n    )\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ?\n        error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const logout = () => (dispatch) => {\n  localStorage.removeItem('userInfo')\n  localStorage.removeItem('cartItems')\n  localStorage.removeItem('shippingAddress')\n  localStorage.removeItem('paymentMethod')\n  dispatch({\n    type: USER_LOGOUT\n  })\n  dispatch({\n    type: USER_DETAILS_RESET\n  })\n  dispatch({\n    type: USER_LIST_RESET\n  })\n  document.location.href = '/login'\n}\n\nexport const register = (name, email, password) => async (dispatch) => {\n  try {\n    dispatch({\n      type: USER_REGISTER_REQUEST,\n    })\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    }\n\n    const {\n      data\n    } = await axios.post(\n      '/api/users', {\n      name,\n      email,\n      password\n    },\n      config\n    )\n\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data,\n    })\n\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.response && error.response.data.message ?\n        error.response.data.message : error.message,\n    })\n  }\n}\n\nexport const getUserDetails = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DETAILS_REQUEST,\n    })\n\n    const {\n      userLogin: {\n        userInfo\n      },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message ?\n        error.response.data.message :\n        error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DETAILS_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_PROFILE_REQUEST,\n    })\n\n    const {\n      userLogin: {\n        userInfo\n      },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const {\n      data\n    } = await axios.put(`/api/users/profile`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_PROFILE_SUCCESS,\n      payload: data,\n    })\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data,\n    })\n    localStorage.setItem('userInfo', JSON.stringify(data))\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message ?\n        error.response.data.message :\n        error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_PROFILE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listUsers = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_LIST_REQUEST,\n    })\n\n    const {\n      userLogin: {\n        userInfo\n      },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const {\n      data\n    } = await axios.get(`/api/users`, config)\n\n    dispatch({\n      type: USER_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message ?\n        error.response.data.message :\n        error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_LIST_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const deleteUser = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: {\n        userInfo\n      },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/users/${id}`, config)\n\n    dispatch({\n      type: USER_DELETE_SUCCESS\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message ?\n        error.response.data.message :\n        error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateUser = (user) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: USER_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: {\n        userInfo\n      },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const {\n      data\n    } = await axios.put(`/api/users/${user._id}`, user, config)\n\n    dispatch({\n      type: USER_UPDATE_SUCCESS\n    })\n\n    dispatch({\n      type: USER_DETAILS_SUCCESS,\n      payload: data\n    })\n\n    dispatch({\n      type: USER_DETAILS_RESET\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message ?\n        error.response.data.message :\n        error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: USER_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap'\nimport { logout } from '../actions/userActions'\nimport logo from '../assets/logo.png'\n\n//a basic navbar component that makes use of react router for navigation\n\nconst Header = () => {\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  const logoutHandler = () => {\n    dispatch(logout())\n  }\n\n  return (\n    <header>\n      <Navbar className=\"nav\" collapseOnSelect>\n        <Container>\n          <LinkContainer to='/'>\n            <Navbar.Brand className=\"header-logo\">\n              <img\n                alt=\"\"\n                src={logo}\n                width=\"40\"\n                height=\"40\"\n                className=\"d-inline-block align-top logo\"\n              />{' '}\n              <div>\n                Simple Life\n              </div>\n            </Navbar.Brand>\n          </LinkContainer>\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\n          <Navbar.Collapse id='basic-navbar-nav'>\n            <Nav className='ml-auto'>\n              <LinkContainer to=\"/\">\n                <Nav.Link>Home</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/plans\">\n                <Nav.Link>Plans</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/about\">\n                <Nav.Link>About</Nav.Link>\n              </LinkContainer>\n              <LinkContainer to=\"/contact\">\n                <Nav.Link>Contact</Nav.Link>\n              </LinkContainer>\n              {userInfo ? (\n                <NavDropdown title={userInfo.name} id='username'>\n                  <NavDropdown.Item onClick={logoutHandler}>\n                    Logout\n                  </NavDropdown.Item>\n                </NavDropdown>\n              ) : (\n                <LinkContainer to='/login'>\n                  <Nav.Link>\n                    <i className='fas fa-user'></i> Sign In\n                  </Nav.Link>\n                </LinkContainer>\n              )}\n              {userInfo && userInfo.isAdmin && (\n                <NavDropdown title='Admin' id='adminmenu'>\n                  <LinkContainer to='/admin/productlist'>\n                    <NavDropdown.Item>Products</NavDropdown.Item>\n                  </LinkContainer>\n                </NavDropdown>\n              )}\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n    </header>\n  )\n}\n\nexport default Header\n","//importing the neccasary modules\nimport React from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\n//some bootstrap components\nimport { Button, Container, Row, Col, Image } from 'react-bootstrap'\nimport park from '../assets/park.jpeg'\nimport browse from '../assets/browse.png'\nimport select from '../assets/select.png'\nimport agent from '../assets/agent.jpeg'\n\n//a basic homescreen page\n\nconst HomeScreen = () => {\n\n    return (\n        <div>\n            <section className=\"home1\">\n                <div className=\"home1text\">\n                    <h1>Buying life insurance? <br /> A walk in the park.</h1>\n                    <p>We provide life insurance for South <br /> Africans. Up to R5 million in coverage <br /> for less than you think.</p>\n                    <Button className=\"home-button\">\n                        <LinkContainer to=\"/plans\">\n                            <h2>Get Started</h2>\n                        </LinkContainer>\n                    </Button>\n                </div>\n                <div className=\"home-img\">\n                    <img src={park} alt=\"\" />\n                </div>\n            </section>\n            <section className=\"home2\">\n                <div className=\"home22\">\n                    <div className=\"home2text\">\n                        <h1>We have simplified the way <br />you buy life insurance</h1>\n                    </div>\n                    <div className=\"process\">\n                        <Container>\n                            <Row className=\"justify-content-md-center\">\n                                <div className=\"col\">\n                                    <Col xs={6} md={4}>\n                                        <Image className=\"round-img\" src={browse} roundedCircle />\n                                        <div className=\"explanation\">\n                                            <h5>1. Browse our plans</h5>\n                                            <p>Browse our list of curated life-insurance plans. Each plan is unique, we are confident there will be a plan that fits you and your family.</p>\n                                        </div>\n                                    </Col>\n                                </div>\n                                <div className=\"col\">\n                                    <Col xs={6} md={4}>\n                                        <Image className=\"round-img\" src={select} roundedCircle />\n                                        <div className=\"explanation\">\n                                            <h5>2. Select your plan</h5>\n                                            <p>Once you are happy with the coverage you would like to purchase, select the plan most suitable to you and your families needs.</p>\n                                        </div>\n                                    </Col>\n                                </div>\n                                <div className=\"col\">\n                                    <Col xs={6} md={4}>\n                                        <Image className=\"round-img\" src={agent} roundedCircle />\n                                        <div className=\"explanation\">\n                                            <h5>3. Agent confirmation</h5>\n                                            <p>One of our life-insurance experts will be in contact with you to confirm your coverage and answer any questions you may have.</p>\n                                        </div>\n                                    </Col>\n                                </div>\n                            </Row>\n                        </Container>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n}\n\nexport default HomeScreen","import React, { useState } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\n//a bootstrap modal to alert users when they press the enquire button on a product\n\nconst EnquireButton = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n            <Button variant=\"\" size=\"sm\" className=\"enquire-button\" onClick={handleShow}>\n                Enquire now\n            </Button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Enquiry Successful</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Thank you for you interest in Simple Life life-insurance. One of our trusted life-insurance agents will contact you to finalize your cover and answer any questions you may have.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n\n}\n\nexport default EnquireButton","import React from 'react'\nimport { Card } from 'react-bootstrap'\nimport EnquireButton from './EnquireButton'\n\n//a component that renders the products. It makes use of a bootstrap card to layout the data\n\nconst Product = ({ product }) => {\n  return (\n    <Card className='my-3 p-3 rounded product-card'>\n      <div className=\"card-content\">\n        <Card.Body>\n          <Card.Title className=\"product-title\" as='div'>\n            <strong>{product.name}</strong> <br /> <span>life insurance</span>\n          </Card.Title>\n          <Card.Text className=\"product-price\" as='h1'>R{product.price} <br /> <span>/mo</span></Card.Text>\n          <div className=\"cover-term\">\n            <div className=\"cover\">\n              <div className=\"cover-text\">\n                <br />\n                <span>Upto</span>\n                <br />\n                <strong>{product.cover}</strong>\n              </div>\n            </div>\n            <div className=\"term\">\n              <div className=\"cover-text\">\n                <br />\n                <span>Term</span>\n                <br />\n                <strong>{product.term}</strong>\n              </div>\n            </div>\n          </div>\n          <div className=\"product-description\">\n            <p>{product.description}</p>\n          </div>\n          <EnquireButton />\n        </Card.Body>\n      </div>\n    </Card>\n  )\n}\n\nexport default Product\n\n\n\n","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\n//a default message component\n\nconst Message = ({ variant, children }) => {\n  return <Alert variant={variant}>{children}</Alert>\n}\n\nMessage.defaultProps = {\n  variant: 'info',\n}\n\nexport default Message\n","import React from 'react'\nimport { Spinner } from 'react-bootstrap'\n\n//a bootstrap spinner to indicate when data is loading\n\nconst Loader = () => {\n  return (\n    <Spinner\n      animation='border'\n      role='status'\n      style={{\n        width: '100px',\n        height: '100px',\n        margin: 'auto',\n        display: 'block',\n      }}\n    >\n      <span className='sr-only'>Loading...</span>\n    </Spinner>\n  )\n}\n\nexport default Loader\n","//importing the neccassary constants\nimport axios from 'axios'\nimport {\n  PRODUCT_LIST_REQUEST,\n  PRODUCT_LIST_SUCCESS,\n  PRODUCT_LIST_FAIL,\n  PRODUCT_DETAILS_REQUEST,\n  PRODUCT_DETAILS_SUCCESS,\n  PRODUCT_DETAILS_FAIL,\n  PRODUCT_DELETE_SUCCESS,\n  PRODUCT_DELETE_REQUEST,\n  PRODUCT_DELETE_FAIL,\n  PRODUCT_CREATE_REQUEST,\n  PRODUCT_CREATE_SUCCESS,\n  PRODUCT_CREATE_FAIL,\n  PRODUCT_UPDATE_REQUEST,\n  PRODUCT_UPDATE_SUCCESS,\n  PRODUCT_UPDATE_FAIL,\n  PRODUCT_CREATE_REVIEW_REQUEST,\n  PRODUCT_CREATE_REVIEW_SUCCESS,\n  PRODUCT_CREATE_REVIEW_FAIL,\n  PRODUCT_TOP_REQUEST,\n  PRODUCT_TOP_SUCCESS,\n  PRODUCT_TOP_FAIL,\n} from '../constants/productConstants'\nimport { logout } from './userActions'\n\n//these are the redux actions for our products\n\nexport const listProducts = (keyword = '', pageNumber = '') => async (\n  dispatch\n) => {\n  try {\n    dispatch({ type: PRODUCT_LIST_REQUEST })\n\n    const { data } = await axios.get(\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\n    )\n\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const listProductDetails = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_DETAILS_REQUEST })\n\n    const { data } = await axios.get(`/api/products/${id}`)\n\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n\nexport const deleteProduct = (id) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_DELETE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.delete(`/api/products/${id}`, config)\n\n    dispatch({\n      type: PRODUCT_DELETE_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_DELETE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProduct = () => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.post(`/api/products`, {}, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const updateProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_UPDATE_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    const { data } = await axios.put(\n      `/api/products/${product._id}`,\n      product,\n      config\n    )\n\n    dispatch({\n      type: PRODUCT_UPDATE_SUCCESS,\n      payload: data,\n    })\n    dispatch({ type: PRODUCT_DETAILS_SUCCESS, payload: data })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_UPDATE_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const createProductReview = (productId, review) => async (\n  dispatch,\n  getState\n) => {\n  try {\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_REQUEST,\n    })\n\n    const {\n      userLogin: { userInfo },\n    } = getState()\n\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`,\n      },\n    }\n\n    await axios.post(`/api/products/${productId}/reviews`, review, config)\n\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_SUCCESS,\n    })\n  } catch (error) {\n    const message =\n      error.response && error.response.data.message\n        ? error.response.data.message\n        : error.message\n    if (message === 'Not authorized, token failed') {\n      dispatch(logout())\n    }\n    dispatch({\n      type: PRODUCT_CREATE_REVIEW_FAIL,\n      payload: message,\n    })\n  }\n}\n\nexport const listTopProducts = () => async (dispatch) => {\n  try {\n    dispatch({ type: PRODUCT_TOP_REQUEST })\n\n    const { data } = await axios.get(`/api/products/top`)\n\n    dispatch({\n      type: PRODUCT_TOP_SUCCESS,\n      payload: data,\n    })\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_TOP_FAIL,\n      payload:\n        error.response && error.response.data.message\n          ? error.response.data.message\n          : error.message,\n    })\n  }\n}\n","//importing the necessary modules\nimport React, { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n//some bootstrap components\nimport { Row, Col } from 'react-bootstrap'\n//some actions, components and constants\nimport Product from '../components/Product'\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport { listProducts } from '../actions/productActions'\nimport plans from '../assets/plans.png'\n\n//this is the page where all of the products are displayed\n\nconst PlanScreen = ({ match }) => {\n  const keyword = match.params.keyword\n\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n  useEffect(() => {\n    dispatch(listProducts(keyword, pageNumber))\n  }, [dispatch, keyword, pageNumber])\n\n\n  //the products are displayed using a bootstrap grid\n  return (\n    <div className=\"planspage\">\n      <div className=\"plan1\">\n        <div className=\"plan1text\">\n          <h1><strong>Change</strong> <span>the way you <br /> buy life insurance</span> </h1>\n          <p>Easy to understand and quick to buy. That's the way most things are in <br /> your life, why should life insurance be any different?</p>\n        </div>\n        <img src={plans} alt=\"\" />\n      </div>\n      <div className=\"plan2\">\n\n        <div className=\"plan2text\">\n          <h3><strong>Our plans</strong> <span>make it <br /> even simpler for you</span></h3>\n        </div>\n\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <>\n            <Row className=\"card-container\">\n              {products.map((product) => (\n                <Col key={product._id} >\n                  <Product product={product} />\n                </Col>\n              ))}\n            </Row>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default PlanScreen\n","//importing the neccassary modules\nimport React from 'react'\nimport about from '../assets/about.png'\n\n//a basic about screen page\n\nconst AboutScreen = () => {\n\n    return (\n        <div className=\"about-page\">\n            <div>\n                <img src={about} alt=\"\" />\n            </div>\n            <div className=\"about-text\">\n                <h2><strong>We can Save</strong> <span>you <br /> time and money</span></h2>\n                <p>At Simple Life, we guarantee to provide you with the ultimate experience through your process of purchasing life insurance. <br /><br />\n                    Our focus is to provide you with a service that saves you time and money, all while providing you with the perfect cover that is\n                    best suited to you and your needs. <br /><br />\n                    Our team of expert life-insurance agents looks forward to assisting you in your journey and we are always a click or call away when\n                    you have any questions or need some assistance. <br /><br />\n                    We look forward to welcoming you to our family!\n                </p>\n            </div>\n        </div>\n    )\n}\n\nexport default AboutScreen","import React, { useState } from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\n//a basic bootstrap Modal component to alert users once they have filled in the contact form\n\nconst ContactButton = () => {\n    const [show, setShow] = useState(false);\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    return (\n        <div>\n            <Button variant=\"light\" size=\"\" className=\"contact-btn\" onClick={handleShow}>\n                Submit\n            </Button>\n\n            <Modal\n                show={show}\n                onHide={handleClose}\n                backdrop=\"static\"\n                keyboard={false}\n            >\n                <Modal.Header closeButton>\n                    <Modal.Title>Submission successful</Modal.Title>\n                </Modal.Header>\n                <Modal.Body>\n                    Thank you for you interest in Simple Life life-insurance. One of our trusted life-insurance agents will contact you to answer any questions you may have.\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                </Modal.Footer>\n            </Modal>\n        </div>\n    );\n\n}\n\nexport default ContactButton","//importing the neccassary modules\nimport React from 'react'\n//bootstrap component\nimport { Form } from 'react-bootstrap'\nimport contact from '../assets/contact.png'\nimport ContactButton from '../components/ContactButton'\n\n//a basic contact sreen page\n\nconst ContactScreen = () => {\n\n    return (\n        <div className=\"contact-page\">\n            <div className=\"contact-form\">\n                <h1>Please enter your contact details below</h1>\n                <h5>and a life-insurance <br />professional will <br />contact you</h5>\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Control type=\"name\" placeholder=\"Your name...\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Control type=\"email\" placeholder=\"Your e-mail....\" />\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicCheckbox\">\n                        <Form.Control type=\"number\" placeholder=\"Your cell-number....\" />\n                    </Form.Group>\n                    <ContactButton />\n                </Form>\n            </div>\n            <div className=\"contact-img\">\n                <img src={contact} alt=\"\" />\n            </div>\n        </div>\n    )\n}\n\nexport default ContactScreen","import React from 'react'\nimport { Container, Row, Col } from 'react-bootstrap'\n\n//a basic bootstrap container \n\nconst FormContainer = ({ children }) => {\n  return (\n    <Container>\n      <Row className='justify-content-md-center'>\n        <Col xs={12} md={6}>\n          {children}\n        </Col>\n      </Row>\n    </Container>\n  )\n}\n\nexport default FormContainer\n","//importing the necassary modules\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n//some bootstrap components\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n//some actions and components\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { login } from '../actions/userActions'\nimport family from '../assets/family.png'\n\n//this is the user login screen, here a user can login to their user profile that they created for the application\n\nconst LoginScreen = ({ location, history }) => {\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n\n  const dispatch = useDispatch()\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { loading, error, userInfo } = userLogin\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(login(email, password))\n  }\n\n  //this page also make use of a basic form to get the user to input their login details.\n  return (\n    <div>\n      <div className=\"signup-bg\">\n        <h1>We've <br />  Got you <br />Covered</h1>\n        <img className=\"sign-image\" src={family} alt=\"\" />\n      </div>\n      <div className=\"signup\">\n        <div className=\"content\">\n          <FormContainer>\n            <h1 className=\"login-head\">Welcome Back!</h1>\n            {error && <Message variant='danger'>{error}</Message>}\n            {loading && <Loader />}\n            <Form onSubmit={submitHandler}>\n              <Form.Group controlId='email'>\n                <Form.Label>Email Address</Form.Label>\n                <Form.Control\n                  type='email'\n                  placeholder='Enter email'\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Form.Group controlId='password'>\n                <Form.Label>Password</Form.Label>\n                <Form.Control\n                  type='password'\n                  placeholder='Enter password'\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                ></Form.Control>\n              </Form.Group>\n\n              <Button className=\"signup-button\" type='submit' variant='primary'>\n                Sign In\n              </Button>\n            </Form>\n            <div className=\"sign-bottom\">\n              <Row className='py-3'>\n                <Col>\n                  Dont have an account?{' '}\n                  <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\n                    Sign up\n                  </Link>\n                </Col>\n              </Row>\n            </div>\n          </FormContainer>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default LoginScreen\n","//importing all the necassary modules\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n//some bootsrap components\nimport { Form, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n//some actions and components\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { register } from '../actions/userActions'\nimport family from '../assets/family.png'\n\n//this is the user register screen, here a user can sign up and create their own user profile for the application\n//setting the initial state\nconst RegisterScreen = ({ location, history }) => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n  const [message, setMessage] = useState(null)\n\n  const dispatch = useDispatch()\n\n  const userRegister = useSelector((state) => state.userRegister)\n  const { loading, error, userInfo } = userRegister\n\n  const redirect = location.search ? location.search.split('=')[1] : '/'\n\n  useEffect(() => {\n    if (userInfo) {\n      history.push(redirect)\n    }\n  }, [history, userInfo, redirect])\n\n  //handling the submit once a user has entered their details\n  const submitHandler = (e) => {\n    e.preventDefault()\n    if (password !== confirmPassword) {\n      setMessage('Passwords do not match')\n    } else {\n      dispatch(register(name, email, password))\n    }\n  }\n\n  //the register component is a basic form making it easy for users to use and sign up\n  return (\n    <div className=\"sign\">\n      <div className=\"signup-bg\">\n        <h1>We've <br />  Got you <br />Covered</h1>\n        <img className=\"sign-image\" src={family} alt=\"\" />\n      </div>\n      <div className=\"signup\">\n        <FormContainer>\n          <h1 className=\"signup-head\">Get Started!</h1>\n          {message && <Message variant='danger'>{message}</Message>}\n          {error && <Message variant='danger'>{error}</Message>}\n          {loading && <Loader />}\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='email'>\n              <Form.Label>Email Address</Form.Label>\n              <Form.Control\n                type='email'\n                placeholder='Enter email'\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='password'>\n              <Form.Label>Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Enter password'\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='confirmPassword'>\n              <Form.Label>Confirm Password</Form.Label>\n              <Form.Control\n                type='password'\n                placeholder='Confirm password'\n                value={confirmPassword}\n                onChange={(e) => setConfirmPassword(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button className=\"signup-button\" type='submit' variant='primary'>\n              Sign Up\n            </Button>\n          </Form>\n\n          <div className=\"sign-bottom\">\n            <Row className='py-3'>\n              <Col>\n                Already Registered?{' '}\n                <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\n                  Sign in\n                </Link>\n              </Col>\n            </Row>\n          </div>\n        </FormContainer>\n      </div>\n    </div>\n  )\n}\n\nexport default RegisterScreen\n","//importing the neccassary modules\nimport React, { useEffect } from 'react'\nimport { LinkContainer } from 'react-router-bootstrap'\n//some bootstrap components\nimport { Table, Button, Row, Col } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n//some actions, components and constants\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport {\n  listProducts,\n  deleteProduct,\n  createProduct,\n} from '../actions/productActions'\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\n\n/*this is the page where an admin can see and delete all the products listed on the site, from this page they can also edit and delete products, \nbut the functionality for deleting and editing are handled in another component. Only the admin has access to this page*/\n\nconst ProductListScreen = ({ history, match }) => {\n  const pageNumber = match.params.pageNumber || 1\n\n  const dispatch = useDispatch()\n\n  const productList = useSelector((state) => state.productList)\n  const { loading, error, products } = productList\n\n  const productDelete = useSelector((state) => state.productDelete)\n  const {\n    loading: loadingDelete,\n    error: errorDelete,\n    success: successDelete,\n  } = productDelete\n\n  const productCreate = useSelector((state) => state.productCreate)\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate,\n    product: createdProduct,\n  } = productCreate\n\n  const userLogin = useSelector((state) => state.userLogin)\n  const { userInfo } = userLogin\n\n  useEffect(() => {\n    dispatch({ type: PRODUCT_CREATE_RESET })\n\n    if (!userInfo || !userInfo.isAdmin) {\n      history.push('/login')\n    }\n\n    if (successCreate) {\n      history.push(`/admin/product/${createdProduct._id}/edit`)\n    } else {\n      dispatch(listProducts('', pageNumber))\n    }\n  }, [\n    dispatch,\n    history,\n    userInfo,\n    successDelete,\n    successCreate,\n    createdProduct,\n    pageNumber,\n  ])\n\n  const deleteHandler = (id) => {\n    if (window.confirm('Are you sure')) {\n      dispatch(deleteProduct(id))\n    }\n  }\n\n  const createProductHandler = () => {\n    dispatch(createProduct())\n  }\n\n  //I have used a basic table to display all of the product data\n  return (\n    <>\n      <Row className='align-items-center'>\n        <Col>\n          <h1>Products</h1>\n        </Col>\n        <Col className='text-right'>\n          <Button className='my-3 create-btn' onClick={createProductHandler}>\n            <i className='fas fa-plus'></i> Create Product\n          </Button>\n        </Col>\n      </Row>\n      {loadingDelete && <Loader />}\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\n      {loadingCreate && <Loader />}\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\n      {loading ? (\n        <Loader />\n      ) : error ? (\n        <Message variant='danger'>{error}</Message>\n      ) : (\n        <>\n          <Table striped bordered hover responsive className='table-sm'>\n            <thead>\n              <tr>\n                <th>ID</th>\n                <th>NAME</th>\n                <th>PRICE</th>\n                <th>COVER</th>\n                <th>TERM</th>\n                <th></th>\n              </tr>\n            </thead>\n            <tbody>\n              {products.map((product) => (\n                <tr key={product._id}>\n                  <td>{product._id}</td>\n                  <td>{product.name}</td>\n                  <td>R{product.price}</td>\n                  <td>{product.cover}</td>\n                  <td>{product.term}</td>\n                  <td className=\"icons\">\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\n                      <Button variant='light' className='btn-sm'>\n                        <i className='fas fa-edit'></i>\n                      </Button>\n                    </LinkContainer>\n                    <Button\n                      variant='danger'\n                      className='btn-sm'\n                      onClick={() => deleteHandler(product._id)}\n                    >\n                      <i className='fas fa-trash'></i>\n                    </Button>\n                  </td>\n                </tr>\n              ))}\n            </tbody>\n          </Table>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default ProductListScreen\n","//importing the necessary modules\nimport React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n//some bootstrap components\nimport { Form, Button } from 'react-bootstrap'\nimport { useDispatch, useSelector } from 'react-redux'\n//some actions, components and constants\nimport Message from '../components/Message'\nimport Loader from '../components/Loader'\nimport FormContainer from '../components/FormContainer'\nimport { listProductDetails, updateProduct } from '../actions/productActions'\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants'\n\n//this is the page where an admin can edit and create new products to be displayed on the application\n\nconst ProductEditScreen = ({ match, history }) => {\n  const productId = match.params.id\n\n  const [name, setName] = useState('')\n  const [price, setPrice] = useState(0)\n  const [image, setImage] = useState('')\n  const [cover, setCover] = useState('')\n  const [term, setTerm] = useState('')\n  const [description, setDescription] = useState('')\n\n\n  const dispatch = useDispatch()\n\n  const productDetails = useSelector((state) => state.productDetails)\n  const { loading, error, product } = productDetails\n\n  const productUpdate = useSelector((state) => state.productUpdate)\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate,\n  } = productUpdate\n\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({ type: PRODUCT_UPDATE_RESET })\n      history.push('/admin/productlist')\n    } else {\n      if (!product.name || product._id !== productId) {\n        dispatch(listProductDetails(productId))\n      } else {\n        setName(product.name)\n        setPrice(product.price)\n        setImage(product.image)\n        setCover(product.cover)\n        setTerm(product.term)\n        setDescription(product.description)\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate])\n\n\n  const submitHandler = (e) => {\n    e.preventDefault()\n    dispatch(\n      updateProduct({\n        _id: productId,\n        name,\n        price,\n        image,\n        cover,\n        term,\n        description,\n      })\n    )\n  }\n\n  //a basic form to allow an admin to edit and create producuts \n  return (\n    <>\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\n        Go Back\n      </Link>\n      <FormContainer>\n        <h1>Edit Product</h1>\n        {loadingUpdate && <Loader />}\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\n        {loading ? (\n          <Loader />\n        ) : error ? (\n          <Message variant='danger'>{error}</Message>\n        ) : (\n          <Form onSubmit={submitHandler}>\n            <Form.Group controlId='name'>\n              <Form.Label>Name</Form.Label>\n              <Form.Control\n                type='name'\n                placeholder='Enter name'\n                value={name}\n                onChange={(e) => setName(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='price'>\n              <Form.Label>Price</Form.Label>\n              <Form.Control\n                type='number'\n                placeholder='Enter price'\n                value={price}\n                onChange={(e) => setPrice(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='cover'>\n              <Form.Label>Cover</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter cover amount'\n                value={cover}\n                onChange={(e) => setCover(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='term'>\n              <Form.Label>Term</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter category'\n                value={term}\n                onChange={(e) => setTerm(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Form.Group controlId='description'>\n              <Form.Label>Description</Form.Label>\n              <Form.Control\n                type='text'\n                placeholder='Enter description'\n                value={description}\n                onChange={(e) => setDescription(e.target.value)}\n              ></Form.Control>\n            </Form.Group>\n\n            <Button className=\"create-btn\" type='submit' variant='primary'>\n              Update\n            </Button>\n          </Form>\n        )}\n      </FormContainer>\n    </>\n  )\n}\n\nexport default ProductEditScreen\n","//importing react modules\nimport React from 'react'\nimport { BrowserRouter as Router, Route } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport Header from './components/Header'\n//importing all of the created screens\nimport HomeScreen from './screens/HomeScreen'\nimport PlanScreen from './screens/PlanScreen'\nimport AboutScreen from './screens/AboutScreen'\nimport ContactScreen from './screens/ContactScreen'\nimport LoginScreen from './screens/LoginScreen'\nimport RegisterScreen from './screens/RegisterScreen'\nimport ProductListScreen from './screens/ProductListScreen'\nimport ProductEditScreen from './screens/ProductEditScreen'\n\n//the app component acts as a holder for all the created components/screens. I have used react router to simplify user navigation\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/search/:keyword' component={PlanScreen} exact />\n          <Route path='/page/:pageNumber' component={PlanScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={PlanScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n          <Route path='/plans' component={PlanScreen} exact />\n          <Route path='/about' component={AboutScreen} exact />\n          <Route path='/contact' component={ContactScreen} exact />\n        </Container>\n      </main>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store'\nimport './bootstrap.min.css'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","module.exports = __webpack_public_path__ + \"static/media/family.c13d41a7.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.73d31155.png\";","module.exports = __webpack_public_path__ + \"static/media/park.6fbb439f.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/browse.eb516653.png\";","module.exports = __webpack_public_path__ + \"static/media/select.eca777b3.png\";","module.exports = __webpack_public_path__ + \"static/media/agent.f80cf840.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/plans.249db5a3.png\";","module.exports = __webpack_public_path__ + \"static/media/about.e3c124e4.png\";","module.exports = __webpack_public_path__ + \"static/media/contact.d39cb86c.png\";"],"sourceRoot":""}